name: codecov.yml
on:
  push:
  pull_request:

jobs:
  get-changed-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files for Pull Request
        if: ${{ github.event_name == 'pull_request' }}
        id: pull_request_files
        run: |
          echo "Changed files (PR):"
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "${{ github.api_url }}/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" \
            | jq -r '.[].filename' > changed_files.txt
          
          cat changed_files.txt
          echo "files=$(paste -sd, changed_files.txt)" >> $GITHUB_OUTPUT

      - name: Get changed files for Push
        if: ${{ github.event_name == 'push' }}
        id: push_files
        run: |
          echo "Changed files (Push):"
          git diff --name-only ${{ github.event.before }} ${{ github.sha }} > changed_files.txt
          
          cat changed_files.txt
          echo "files=$(paste -sd, changed_files.txt)" >> $GITHUB_OUTPUT

      - name: Set final files variable
        run: |
          FILES="${{ steps.pull_request_files.outputs.files }}"
          if [ -z "$FILES" ]; then
            FILES="${{ steps.push_files.outputs.files }}"
          fi
          echo "final_files=$FILES" >> $GITHUB_ENV

      - name: Use final files
        run: |
          echo "Final files: $final_files"

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - uses: php-actions/composer@v6
        with:
          args: "--ignore-platform-reqs --no-scripts"
          working_dir: "src"

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pdo_mysql, opcache, redis, mysql
          coverage: xdebug

      - name: PHPUnit Tests
        working-directory: "src"
        env:
          XDEBUG_MODE: coverage
        run: vendor/bin/phpunit --coverage-clover ./coverage.xml