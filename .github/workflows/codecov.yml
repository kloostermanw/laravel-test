name: codecov.yml
on:
  push:
  pull_request:

jobs:
  get-changed-files:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files for Pull Request
        if: ${{ github.event_name == 'pull_request' }}
        id: pull_request_files
        run: |
          echo "Changed files (PR):"
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "${{ github.api_url }}/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files" \
            | jq -r '.[].filename' > changed_files.txt
          
          cat changed_files.txt
          echo "files=$(paste -sd, changed_files.txt)" >> $GITHUB_OUTPUT

      - name: Get changed files for Push
        if: ${{ github.event_name == 'push' }}
        id: push_files
        run: |
          echo "Changed files (Push):"
          BEFORE_SHA="${{ github.event.before }}"
          AFTER_SHA="${{ github.sha }}"
          EMPTY_TREE="4b825dc642cb6eb9a060e54bf8d69288fbee4904"
          
          # If BEFORE_SHA is all zeros, use the empty tree
          if [ "$BEFORE_SHA" = "0000000000000000000000000000000000000000" ]; then
            BEFORE_SHA="$EMPTY_TREE"
          fi
          
          # If BEFORE_SHA doesn't exist locally (e.g., force push removed it), use empty tree
          if ! git cat-file -e "$BEFORE_SHA"^{commit} 2>/dev/null; then
            echo "WARNING: $BEFORE_SHA not found locally, falling back to empty tree."
            BEFORE_SHA="$EMPTY_TREE"
          fi
          
          git diff --name-only "$BEFORE_SHA" "$AFTER_SHA" > changed_files.txt
          
          cat changed_files.txt
          echo "files=$(paste -sd, changed_files.txt)" >> $GITHUB_OUTPUT

      - name: Set final files variable
        run: |
          FILES="${{ steps.pull_request_files.outputs.files }}"
          if [ -z "$FILES" ]; then
            FILES="${{ steps.push_files.outputs.files }}"
          fi
          echo "final_files=$FILES" >> $GITHUB_ENV

      - name: Use final files
        run: |
          echo "Final files: $final_files"

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ hashFiles('**/composer.lock') }}

      - uses: php-actions/composer@v6
        with:
          args: "--ignore-platform-reqs --no-scripts"
          working_dir: "src"

      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo, pdo_mysql, opcache, redis, mysql
          coverage: xdebug

      - name: Install Dependencies
        working-directory: "src"
        run: |
          touch database/database.sqlite
          cp .env.example .env
          php artisan key:generate
          php artisan config:cache
          php artisan migrate:fresh --seed

      - name: PHPUnit Tests
        working-directory: "src"
        env:
          XDEBUG_MODE: coverage
        run: |
          vendor/bin/phpunit --coverage-clover ./coverage.xml

      - name: Coverage report
        uses: kloostermanw/php-code-coverage@master
        with:
          file: ./src/coverage.xml
          files: ${{ env.final_files }}